import "logical.asa";

begin fib: pop n;
    push n; push 0; cmp; ifgoto 0 ret0;             // if n == 0 return 0
    push n; push 1; cmp; ifgoto 0 ret1;             // if n == 1 return 1

    var first 0;
    var second 1;
    var i 2;
    label loop;
        push first; push second; add; pop result;   // result = first + second
        push second; pop first;                     // first  = second
        push result; pop second;                    // second = result
        push i; push 1; add; pop i;
        push i; push n; call logical/lesser_or_eq?; // if i <= n ...
        ifgoto 1 loop;                              // then: goto loop (repeat loop)
    push second; pop result; goto ret;              // else: result = second and return
    
    label ret0; push 0; pop result; goto ret;       // return 0
    label ret1; push 1; pop result; goto ret;       // return 1
    label ret;  push result;                        // push value of result to stack
end

begin main:
    push 0;  call fib;
    push 1;  call fib;
    push 7;  call fib;
    push 10; call fib;
    show;
end
